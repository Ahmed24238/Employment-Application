@model website.Models.jobs

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_LayoutPage.cshtml";
}
<style>
    ul {
        list-style-type: none;
        margin: 0;
        padding: 0;
        overflow: hidden;
        background-color: #222f3e;
        opacity: 0.8;
    }

    li {
        float: left;
    }

        li a {
            display: block;
            color: white;
            text-align: center;
            padding: 14px 16px;
            text-decoration: none;
        }

    #nav {
        display: block;
        color: white;
        text-align: center;
        padding: 14px 16px;
        text-decoration: none;
    }

    li a:hover:not(.active) {
        background-color: #111;
    }

    .active {
        background-color: #10ac84;
    }
    div{
        text-align:center;
    }

    label {
        color: #111;
        font-size: 17px;
        margin: 8px 6px;
    }

    input {
        width: 460px;
        height: 50px;
        font-weight: bold;
        border: solid;
        border-radius: 5px;
        padding-left: 8px;
        background: #f1f1f1;
    }
    #check {
        width: 250px;
        height: 30px;
        font-weight: bold;
        border: none;
        border-radius: 5px;
        padding-left: 8px;
    }
    h1, h4 {
        text-align: center;
        display: block;
        font-size: 2.5em;
        font-weight: bold;
    }

    hr {
        border: 1px solid #8B0000;
        margin-bottom: 25px;
    }

    body {
        margin: 0;
        padding: 0;
        background-image: url('../../Uploads/site.jpg');
        background-repeat: no-repeat;
        background-attachment: fixed;
        background-size: 100% 100%;
    }

    a.create {
        text-align: center;
    }

    button {
        background-color: #222f3e;
        color: white;
        padding: 16px 20px;
        text-align: center;
        border-radius: 17px;
        border: none;
        width: 100px;
        cursor: pointer;
        opacity: 1;
    }

        button:hover {
            opacity: 0.8;
        }

    a {
        text-align: center;
        text-decoration: none;
        background-color: #222f3e;
        color: white;
    }

    #cre {
        background-color: #222f3e;
        color: white;
        padding: 25px 30px;
        margin: 5px;
        text-align: center;
        border-radius: 17px;
        border: none;
        width: 150px;
        cursor: pointer;
        transition-duration: 0.4s;
        opacity: 1;
    }

        #cre:hover {
            box-shadow: 0 12px 16px 0 rgba(0,0,0,0.24),0 17px 50px 0 rgba(0,0,0,0.19);
        }
    select {
        width: 200px;
        height: 30px;
        font-weight: bold;
        border: solid;
        border-radius: 5px;
        padding-left: 8px;
        background: #f1f1f1;
    }
</style>
<div class="h1">
    <h1>Create job Post</h1>
</div>
<script src="~/Scripts/ckeditor/ckeditor.js"></script>
@using (Html.BeginForm("create","jobs",FormMethod.Post,new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <div class="h1">
    </div>
    <hr>
    <br />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="title">
        <div>
            <div class="form-group ">
                @Html.LabelFor(model => model.JobName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.JobName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.JobName, "", new { @class = "text-danger" })

                 <br>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.jobdescription, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.jobdescription, new { htmlAttributes = new { @class = "form-control", @id = "jobdescription" } })
                    @Html.ValidationMessageFor(model => model.jobdescription, "", new { @class = "text-danger" })
                </div>
            </div>
            <br>

            <div class="form-group">
                @Html.LabelFor(model => model.Jobphoto, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <input id="check" type="file" name="upload" />
                    @Html.ValidationMessageFor(model => model.Jobphoto, "", new { @class = "text-danger" })
                </div>
            </div>
            <br>
            <div class="form-group">
                @Html.LabelFor(model => model.categoryid, "Category ID", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("categoryid", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.categoryid, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button id="cre" class="btn btn-default">Create</button>
            </div>
        </div>
    </div>
</div>
}

<div>
    <button id="cre">@Html.ActionLink("Back To Site", "Index")</button>
</div>
<script>
    CKEDITOR.replace("jobdescription");
</script>